@model WeddingCD.Models.Home.HomeViewModel

@{
    ViewBag.Title = "Home Page";
}

@functions{
    public bool IsVideo(string extension)
    {
        extension = extension.ToLower();

        if (extension == "mp4" || extension == "avi" || extension == "mov" || extension == "mpg")
            return true;

        return false;
    }
}

@{if (!WeddingCD.Models.ViewModelBase.IsUserLoggedIn)
    {

        <section class="container login-form">

            <a class="navbar-brand" style="margin: auto;width: 100%;padding: 10px;">
                <ul class="names" style="font-size:45px;">
                    <li>@WeddingCD.Resources.View.CommonResources.PrenomFemme</li>
                    <li class="circle" style="width: 40px;height: 40px;font-size: 30px;top: 0px;">&amp;</li>
                    <li>@WeddingCD.Resources.View.CommonResources.PrenomHomme</li>
                </ul>
            </a>
            <section>
                

                <form id="FormLogin" method="post" action="" role="login">
                    @*<img src="../Content/Images/logo.png" alt="" class="img-responsive" />*@


                    <div id="AuthentificationError" class="validation-summary-errors panel panel-danger" data-valmsg-summary="true" style="display:none;">
                        <div class="panel-heading">
                            Authentification
                        </div>
                        <div class="panel-body">
                            <ul>
                                <li>Le login ou le mot de passe est incorrecte.</li>
                            </ul>
                        </div>
                    </div>

                    <div class="form-group">
                        <input type="text" name="login" id="login" required class="form-control" placeholder="Login" />
                        <span class="glyphicon glyphicon-user"></span>
                    </div>

                    <div class="form-group">
                        <input type="password" name="password" id="password" required class="form-control" placeholder="Mot de passe" />
                        <span class="glyphicon glyphicon-lock"></span>
                    </div>

                    <button type="submit" name="go" class="btn btn-block" style="background-color:#f9667e;border:1px solid transparent;color:white">Se connecter</button>
                </form>
            </section>
        </section>

        <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
        <script src="assets/bootstrap/js/bootstrap.min.js"></script>
    }
    else
    {
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document" style="margin-top: 40vh;">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title" id="exampleModalLabel">@WeddingCD.Resources.View.CommonResources.AjouterPhotoVideo</h2>
                        <img class="text-right CrossGoBack" data-dismiss="modal" aria-label="Close" src="~/Content/Images/croix_noir.png">
                    </div>
                    <form id="FormUploadPicture" enctype="multipart/form-data" method="POST">
                        <div class="modal-body">
                            <div class="form-group">
                                @Html.LabelFor(z => z.CategorieListItem, new { @class = "col-form-label" })
                                @Html.DropDownListFor(m => m.SelectedCategory, Model.CategorieListItem, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(z => z.AddByListItem, new { @class = "col-form-label" })
                                @Html.DropDownListFor(m => m.SelectedAddBy, Model.AddByListItem, new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(z => z.PictureToUpload, new { @class = "col-form-label" })
                                @Html.TextBoxFor(model => model.PictureToUpload, new { type = "file", @multiple = "multiple", accept = ".png,.jpg,.jpeg,.gif,.mp4", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PictureToUpload)
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                            <button type="button" onclick="UploadPictureButton();" class="btn btn-primary">Envoyer</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- START SECTION: gallery -->
        <section id="gallery" class="bg-gray-1">
            <div class="container">
                <div class="row">
                    <div class="col-md-8 col-md-offset-2 col-xs-12 text-center">
                        <div class="title-block">
                            <h1>@WeddingCD.Resources.View.CommonResources.Galerie <span><em>@WeddingCD.Resources.View.CommonResources.Photo </em></span></h1>

                            <div class="divider"></div>

                            <div class="row">
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                                    @WeddingCD.Resources.View.CommonResources.AjouterPhotoVideo
                                </button>
                            </div>

                            <div class="divider"></div>


                            <div class="gallery_nav">
                                <button class="btn btn-primary btn-bordered filter-button active" data-filter="all">@WeddingCD.Resources.View.CommonResources.Tous</button>

                                @foreach (var category in Model.Categories)
                                {
                                    <button class="btn btn-primary btn-bordered filter-button" data-filter="gallery-@Html.Raw(category.Name)">@Html.Raw(category.Name)</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row gallery-popup">
                    @foreach (var picture in Model.Pictures)
                    {
                        if (IsVideo(picture.Path.Substring(picture.Path.Length - 3, 3)))
                        {
                            <div class="gallery_product col-lg-4 col-md-4 col-sm-4 col-xs-6 filter gallery-@Html.Raw(picture.Category.Name)">
                                <video class="img-responsive mfp-image" id="video" preload="none" controls style="height:250px;">
                                    <source src="/Content/Galerie/@picture.Path" type="video/mp4">
                                </video>
                            </div>
                        }
                        else
                        {
                            <div class="gallery_product col-lg-4 col-md-4 col-sm-4 col-xs-6 filter gallery-@Html.Raw(picture.Category.Name)">
                                <a href="/Content/Galerie/@Html.Raw(picture.Path)" class="mfp-image" title="Gallery image title">
                                    <img src="/Content/Galerie/@Html.Raw(picture.Path)" class="img-responsive" alt="Gallery image" style="height:250px;">
                                </a>
                            </div>
                        }
                    }
                </div>
            </div>
        </section>
        <!-- END SECTION: gallery -->

    }
}

<script>
    $(document).ready(function () {

        @foreach (var picture in Model.Pictures)
        {
            if (IsVideo(picture.Path.Substring(picture.Path.Length - 3, 3)))
            {
                @Html.Raw(@"$('#promovid').click(function() { $('#video').get(0).play(); $('#video').css('display', 'block'); $('#video').get(0).mozRequestFullScreen(); });");
            }
        }
    });

    function Login() {
        $("#FormLogin").submit();
    }

    jQuery('#FormLogin').submit(function (e) {
        e.preventDefault();

        var password = $("#password").val();
        var login = $("#login").val();

        var formData = new FormData();
        formData.append('login', login);
        formData.append('password', password);

        jQuery.ajax({
            url: '@Url.Action("Login", "Home")',
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function (result) {
                if (result.Success)
                {
                    var url = '@Url.Action("Index", "Home")';
                    window.location.href = url;
                }
                else
                {
                    $("#AuthentificationError").css("display", "block");
                }
            },
            error: function (xhr, request, error) {
                console.log(arguments);
                alert(xhr.responseText);
            },
        });
    });

    function UploadPictureButton() {
        $("#FormUploadPicture").submit();
    }

    jQuery('#FormUploadPicture').submit(function (e) {
        e.preventDefault();

        var category = $("#SelectedCategory").val();
        var addBy = $("#SelectedAddBy").val();

        var formData = new FormData();
        formData.append('Categorie', category);
        formData.append('AddBy', addBy);

        var ins = document.getElementById('PictureToUpload').files.length;
        for (var x = 0; x < ins; x++) {
            formData.append("files", document.getElementById('PictureToUpload').files[x]);
        }

        jQuery.ajax({
            url: '@Url.Action("UploadPictureAsync", "Home")',
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function () {
                location.reload();
            },
            error: function (xhr, request, error) {
                console.log(arguments);
                alert(xhr.responseText);
            },
        });
    });
</script>